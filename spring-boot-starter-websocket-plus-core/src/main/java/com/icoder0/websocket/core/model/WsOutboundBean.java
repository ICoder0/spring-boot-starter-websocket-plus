package com.icoder0.websocket.core.model;import com.alibaba.fastjson.annotation.JSONField;import com.icoder0.websocket.core.constant.WsBusiCode;import lombok.AccessLevel;import lombok.Builder;import lombok.Data;import lombok.extern.slf4j.Slf4j;import org.apache.commons.lang3.StringUtils;/** * @author bofa1ex * @since 2020/6/30 */@Slf4j@Data@Builder(access = AccessLevel.PRIVATE)public class WsOutboundBean<T> implements WsOutboundBeanSpecification {    /* 消息序号, 如果自定义下行数据格式, 必须强制性要求该字段 */    @JSONField    private Long sequence;    /* 订阅主题 */    @JSONField(ordinal = 1)    private Long topic;    /* 状态码 */    @JSONField(ordinal = 2)    private Integer code;    @JSONField(ordinal = 3)    private T payload;    @JSONField(ordinal = 4)    private String message;    @Override    public Long sequence() {        return sequence;    }    @Override    public WsOutboundBeanSpecification setSequence(Long sequence) {        this.sequence = sequence;        return this;    }    @Override    public Long topic() {        return topic;    }    @Override    public WsOutboundBeanSpecification setTopic(Long topic) {        this.topic = topic;        return this;    }    public static WsOutboundBeanTopicStep topic(Long topic) {        return new WsOutboundBeanTopicStep(topic);    }    public static class WsOutboundBeanTopicStep {        private final Long topic;        public WsOutboundBeanTopicStep(Long topic) {            this.topic = topic;        }        public <T> WsOutboundBeanBody<T> status(WsBusiCode code) {            return new WsOutboundBeanBody<T>(code, topic);        }        public <T> WsOutboundBean<T> ok(T body) {            return new WsOutboundBeanBody<T>(WsBusiCode.OK, topic).body(body).build();        }        public <T> WsOutboundBeanBody<T> ok() {            return new WsOutboundBeanBody<T>(WsBusiCode.OK, topic);        }    }    public static class WsOutboundBeanBody<T> {        private final WsBusiCode code;        private final Long topic;        private T body;        private String message;        public WsOutboundBeanBody(WsBusiCode code, Long topic) {            this.code = code;            this.topic = topic;        }        public WsOutboundBeanBody<T> body(T body) {            this.body = body;            return this;        }        public WsOutboundBeanBody<T> message(String message) {            this.message = message;            return this;        }        public WsOutboundBean<T> build() {            return WsOutboundBean.<T>builder()                    .code(code.getCode())                    .payload(body)                    .topic(topic)                    .message(String.format(code.getZhMsg(), StringUtils.isBlank(message) ? "" : message))                    .build();        }    }}